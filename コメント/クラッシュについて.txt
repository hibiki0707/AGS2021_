クラッシュについて
①不具合は「なるべく早く発覚した方がいい」
②バグはさっさと、クラッシュとして発生させるべき
③見えない不具合の方がよっぽど怖い（探しづらい）
→想定外の値がきたときは、プログラマがクラッシュさせる

クラッシュさせる関数assert(値)
assert関数は、値が為の時(false/0)にクラッシュする
assert関数を使うには#include<cassert>をインクルードしておく

アニメーションする画像をロードする場合
itch.ioなどの場合、1つにまとまってるファイルと、別々になっているファイルがあります

処理効率を考えると、原則的には「別々になっているファイル」よりも
「一つにまとまっているファイル」をロードする方が効率がいい
理由：
①オープン/クローズするごとにコストがかかる
	例えば100個ファイルがあった場合、まとめとけば1回で済むものが100回行われるため、
	めっちゃ効率が悪い。
	あまりにも、手間と複雑さと、自分の力量にあわない場合は
	別にバラバラでも構わない。
②ディスク上のファイルがでかくなる。どういうことかというと
	ファイルサイズと、ディスク上のサイズは「違う」
	OSがHDD/SSDとか、DVDなどのメディアにファイルを配置する場合、
	OSごとに決まっていたかと思う……セクタごとに配置する。
	1セクタ(区画)はだいたい1KB(4096バイト)。
	なので、4096バイトの倍数未満のファイルの場合、ディスク上では
	4096に丸められる。
	サイズが1111バイトだった場合、4096バイトにされる(ディスク上のサイズ)
③最近のあアーキテクチャにおいて、画像ファイルのロードってのは
	画面上に表示するためのものである。
	ストレージ(HDD/SSD/DVD)→メインメモリ(RAM)で終わらなくて
	RAM→VRAM(画面上に表示するためのグラボ上のメモリ)
	ストレージ→メモリ上へコピー
	メインメモリ→VRAMへ転送(PCIバスという線)

※じゃあ、全部まとめて最初っからVRAMにおいとけばいいのか？
VRAMってのは、容量が「比較的」少ないため、何でもかんでも
最初に置くと容量がオーバーして、逆に効率が悪くなるので、
その辺は、ハードウェアとゲームの規模から考える。